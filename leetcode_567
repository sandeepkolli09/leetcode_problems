leetcode 567:
567. Permutation in String:

code :
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int n=s2.size(),m=s1.size();
        bool answer=false;
        map<char,int>mp;
        map<char,int>mp2;
   
          for(int i=0;i<m;i++)
        {
            mp2[s1[i]]++; }
            
int i=0,j=0;
        while(j<n)
        {
            if(j-i+1<m)
         {
               mp[s2[j]]++;
               j++;
        }
        else
        {
            mp[s2[j]]++;
            if(check(mp,mp2)){
                return true;

            }
            mp[s2[i]]--;
           if(mp[s2[i]]==0)
           mp.erase(s2[i]);

           i++;
           j++; 
        }
        }
        return false;
    }
     bool check(map<char, int>& s, map<char, int>& p) {
    if (s.size() != p.size())
        return false;

    auto it1 = s.begin();
    auto it2 = p.begin();
    while (it1 != s.end() && it2 != p.end()) {
        if (it1->first != it2->first || it1->second != it2->second)
            return false;
        ++it1;
        ++it2;
    }
    return true;
}
};
